// src/pages/OrdersPage.tsx
import { useEffect, useState } from "react";
import { getMyOrders } from "../api/orders";

type OrderItem = {
  id: number;
  quantity: number;
  product: {
    title: string;
    retail_price: number | null;
  };
};

type Order = {
  id: number;
  created_at: string;
  status: string;
  items: OrderItem[];
};

export default function OrdersPage() {
  const [orders, setOrders] = useState<Order[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    getMyOrders()
      .then((data) => {
        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã —Å–≤–µ—Ä—Ö—É
        const sorted = data.sort(
          (a: Order, b: Order) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime()
        );
        setOrders(sorted);
      })
      .catch((err) => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤", err))
      .finally(() => setLoading(false));
  }, []);

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤...</p>;

  return (
    <div style={{ padding: "2rem" }}>
      <h2>–ú–æ–∏ –∑–∞–∫–∞–∑—ã</h2>
      {orders.length === 0 ? (
        <p>–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</p>
      ) : (
        orders.map((order) => {
          const total = order.items.reduce((acc, item) => {
            const price = item.product.retail_price ?? 0;
            return acc + price * item.quantity;
          }, 0);

          return (
            <div key={order.id} style={{ marginBottom: "2rem", borderBottom: "1px solid #ccc", paddingBottom: "1rem" }}>
              <h3>üì¶ –ó–∞–∫–∞–∑ #{order.id}</h3>
              <p>üïí –°–æ–∑–¥–∞–Ω: {new Date(order.created_at).toLocaleString()}</p>
              <p>üìç –°—Ç–∞—Ç—É—Å: <strong>{order.status}</strong></p>
              <ul>
                {order.items.map((item) => (
                  <li key={item.id}>
                    <strong>{item.product.title}</strong> ‚Äî{" "}
                    {item.product.retail_price ?? "–Ω–µ—Ç —Ü–µ–Ω—ã"} ‚ÇΩ √ó {item.quantity} —à—Ç.
                  </li>
                ))}
              </ul>
              <p><strong>üí∞ –ò—Ç–æ–≥–æ:</strong> {total} ‚ÇΩ</p>
            </div>
          );
        })
      )}
    </div>
  );
}

import { useEffect, useState } from "react";
import { getOrdersForAdmin } from "../api/orders";

type OrderItem = {
  id?: number; // üëà –¥–µ–ª–∞–µ–º –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
  product: { title: string; retail_price: number | null };
  quantity: number;
};

type Order = {
  id: number;
  created_at: string;
  status: string;
  user: { id: number; username: string };
  items: OrderItem[];
};

export default function AllOrdersPage() {
  const [orders, setOrders] = useState<Order[]>([]);
  const [loading, setLoading] = useState(true);
  const [accessDenied, setAccessDenied] = useState(false);

  useEffect(() => {
    getOrdersForAdmin()
      .then(setOrders)
      .catch((err) => {
        if (err.message === "403") {
          setAccessDenied(true);
        } else {
          console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤:", err);
        }
      })
      .finally(() => setLoading(false));
  }, []);

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤...</p>;
  if (accessDenied) return <p>‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–æ–≤.</p>;

  return (
    <div style={{ padding: "2rem" }}>
      <h2>–í—Å–µ –∑–∞–∫–∞–∑—ã</h2>
      {orders.length === 0 ? (
        <p>–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤</p>
      ) : (
        orders.map((order) => (
          <div
            key={order.id}
            style={{
              marginBottom: "2rem",
              padding: "1rem",
              border: "1px solid #ccc",
            }}
          >
            <h3>
              üì¶ –ó–∞–∫–∞–∑ #{order.id} ‚Äî üë§ {order.user.username} (ID: {order.user.id})
            </h3>
            <p>üïí {new Date(order.created_at).toLocaleString()}</p>
            <p>üìå –°—Ç–∞—Ç—É—Å: {order.status}</p>
            <ul>
              {order.items.map((item, index) => (
                <li key={item.id ?? `${order.id}-${index}`}>
                  {item.product.title} ‚Äî {item.product.retail_price ?? "–Ω–µ—Ç —Ü–µ–Ω—ã"} ‚ÇΩ √ó{" "}
                  {item.quantity} —à—Ç.
                </li>
              ))}
            </ul>
            <p>
              <strong>üí∞ –ò—Ç–æ–≥–æ:</strong>{" "}
              {order.items.reduce(
                (acc, item) =>
                  acc + (item.product.retail_price ?? 0) * item.quantity,
                0
              )}{" "}
              ‚ÇΩ
            </p>
          </div>
        ))
      )}
    </div>
  );
}

import api from "./axios";

// üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
export async function getCategories() {
  try {
    const res = await api.get("/categories/categories/");
    return res.data;
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π", err);
    return [];
  }
}

export async function createCategory(name: string) {
  try {
    return await api.post("/categories/categories/", { name });
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", err);
    throw err; // ‚õî –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–ª—å—à–µ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  }
}

export async function updateCategory(id: number, name: string) {
  try {
    return await api.patch(`/categories/categories/${id}`, { name });
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", err);
    throw err;
  }
}

export async function deleteCategory(id: number) {
  try {
    return await api.delete(`/categories/categories/${id}`);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", err);
    throw err;
  }
}

export async function restoreCategory(name: string) {
  try {
    return await api.patch(`/categories/categories/restore?name=${encodeURIComponent(name)}`);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", err);
    throw err;
  }
}

// üè∑Ô∏è –ê—Ç—Ä–∏–±—É—Ç—ã (–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
export async function getCategoryAttributes(categoryId: number) {
  try {
    return await api.get(`/attributes/attributes/category/${categoryId}`);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", err);
    throw err;
  }
}

export async function bindAttributeToCategory(categoryId: number, attributeId: number) {
  try {
    return await api.post(`/attributes/attributes/category/${categoryId}/${attributeId}`);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –∞—Ç—Ä–∏–±—É—Ç–∞", err);
    throw err;
  }
}

export async function unbindAttributeFromCategory(categoryId: number, attributeId: number) {
  try {
    return await api.delete(`/attributes/attributes/category/${categoryId}/${attributeId}`);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤—è–∑–∫–µ –∞—Ç—Ä–∏–±—É—Ç–∞", err);
    throw err;
  }
}

import api from "./axios";

// üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
export async function getCategories() {
  try {
    const res = await api.get("/categories/categories/");
    return res.data;
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π", err);
    return [];
  }
}

export async function createCategory(name: string) {
  return api.post("/categories/categories/", { name });
}

export async function updateCategory(id: number, name: string) {
  return api.patch(`/categories/categories/${id}`, { name });
}

export async function deleteCategory(id: number) {
  return api.delete(`/categories/categories/${id}`);
}

// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø–µ—Ä–µ–¥–∞—ë–º name –≤ query-–ø–∞—Ä–∞–º–µ—Ç—Ä–µ, –∞ –Ω–µ –≤ —Ç–µ–ª–µ
export async function restoreCategory(name: string) {
  return api.patch(`/categories/categories/restore?name=${encodeURIComponent(name)}`);
}

// üè∑Ô∏è –ê—Ç—Ä–∏–±—É—Ç—ã (–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
export async function getCategoryAttributes(categoryId: number) {
  return api.get(`/attributes/attributes/category/${categoryId}`);
}

export async function bindAttributeToCategory(categoryId: number, attributeId: number) {
  return api.post(`/attributes/attributes/category/${categoryId}/${attributeId}`);
}

export async function unbindAttributeFromCategory(categoryId: number, attributeId: number) {
  return api.delete(`/attributes/attributes/category/${categoryId}/${attributeId}`);
}

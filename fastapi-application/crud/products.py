from typing import Sequence
from fastapi import HTTPException

from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from core.models import Product
from core.schemas.product import ProductCreate


async def get_all_products(
    session: AsyncSession,
) -> Sequence[Product]:
    stmt = select(Product).order_by(Product.id)
    result = await session.scalars(stmt)
    return result.all()


async def get_product_by_id(
    session: AsyncSession,
    product_id: int,
) -> Product | None:
    return await session.get(Product, product_id)


async def create_product(
        session: AsyncSession,
        product_create: ProductCreate,
) -> Product:
    # üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–¥—É–∫—Ç —Å —Ç–∞–∫–∏–º –∂–µ title
    result = await session.execute(
        select(Product).where(Product.title == product_create.title)
    )
    existing_product = result.scalar_one_or_none()

    if existing_product:
        raise HTTPException(
            status_code=400,
            detail=f"–ü—Ä–æ–¥—É–∫—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{product_create.title}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.",
        )

    # ‚úÖ –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º
    product = Product(**product_create.model_dump())
    session.add(product)
    await session.commit()
    await session.refresh(product)  # —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î

    return product

from pydantic import BaseModel, ConfigDict, EmailStr, Field
from typing import Optional

class UserBase(BaseModel):
    username: str
    email: EmailStr
    full_name: Optional[str] = None
    phone_number: str = Field(
        ...,  # –∏–ª–∏ `None` –µ—Å–ª–∏ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ
        pattern=r'^\+?\d{10,15}$',
        description="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 10 –¥–æ 15 —Ü–∏—Ñ—Ä, –º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å +"
    )


class UserCreate(UserBase):
    password: str  # üëà –ø–∞—Ä–æ–ª—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    email: EmailStr


class UserRead(UserBase):
    model_config = ConfigDict(from_attributes=True)
    id: int
    is_superuser: bool


class Token(BaseModel):
    access_token: str
    token_type: str
